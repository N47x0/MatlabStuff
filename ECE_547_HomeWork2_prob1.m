% Prob 1.

%*************************************************************************
% Plant Model
%*************************************************************************
% State Names 
%  -----------
%  AZ fps2         
%  q rps           
%  Dele deg        
%  Dele dot dps    
%  Input Names
%  -----------
%  Dele cmd deg    
Ap = [  -0.576007   -3255.07    4.88557     9.25796;
        -0.0410072  -0.488642   -2.03681    0;
         0          0           0           1;
         0          0           -8882.64    -133.266];
Bp = [ 0; 0; 0; 8882.64];
Cp = [  1    0    0    0;
        0    1    0    0];
Dp = 0.*Cp*Bp;


%*******************************************************
% Static Output Feedback With New Form To Test Prior To Substituting 
% The Big Plant Model
%*******************************************************  
% Close the loop to test the model
% Plant form  xdot = Apx + Bpu; y = Cpx +Dpu
% Controller xcdot = Acxc + Bc1y + Bc2r
%                      u = Ccxc + Dc1y + Dc2r
Ac = [ 0 ];
Bc1 = [ -1  0];
Bc2 = [ 1 ];
Cc = [ 0.0107349];
Dc1 = [ -0.0411729  11.4003];
Dc2 = [ 0 ];

% Closed-loop system (p19-20 1.42-1.44)
Z = [eye(size(Dc1*Dp)) - Dc1*Dp];
Zinv = inv(Z);

A_cl = [Ap+Bp*Zinv*Dc1*Cp             Bp*Zinv*Cc;
        Bc1*(eye(size(Dp*Zinv*Dc1))+Dp*Zinv*Dc1)*Cp   Ac+Bc1*Dp*Zinv*Cc];

B_cl = [Bp*Zinv*Dc2;
        Bc2+Bc1*Dp*Zinv*Dc2];

C_cl = [(eye(size(Dp*Zinv*Dc1))+Dp*Zinv*Dc1)*Cp Dp*Zinv*Cc];

D_cl = [Dp*Zinv*Dc2];

sys_cl_1 = ss(A_cl, B_cl, C_cl, D_cl);
%sys_cl_2 = ss(plant,controller);%append(controller, plant);
%cl_sys = controller*plant
figure (1);
step(sys_cl_1);
%figure(2)
%step(sys_cl_2);
%step(sys_cl_3);


% Loop gain at input (p.20 1.49) 
A_Li = [Ap     zeros(4,1);
        Bc1*Cp Ac];
B_Li = [Bp; Bc1*Dp];
C_Li = -[Dc1*Cp Cc];
D_Li = -[Dc1*Dp];

sys_Li = ss(A_Li,B_Li,C_Li,D_Li);
% a)
figure (2)
bode(sys_Li);
grid on;
% identify GM and PM
[Gm Pm Wgm Wpm] = margin(sys_Li);
Gm = 20*log10(Gm)
Pm
Wgm
Wpm


% b)
figure (3)
nyquist(sys_Li);
grid on;
% identify GM and PM

% c) & d)
figure(4)
sigma(sys_Li, [],2);
retDiff = sigma(sys_Li, [],2);
grid on;

min(retDiff)

figure(5)
sigma(sys_Li, [],3);
stabRob = sigma(sys_Li, [],3);
grid on;

min(stabRob)

% e)
% SV Gain and Phase Margin (p.119 5.61-5.63)
a_sig = min(retDiff);
b_sig = min(stabRob);

GM_retDiff = [mag2db(1/(1+a_sig)) mag2db(1/(1-a_sig))]
GM_stabRob = [mag2db((1-b_sig))   mag2db((1+b_sig))]

PM_retDiff = [radtodeg(2*asin(a_sig/2)) radtodeg(-2*asin(a_sig/2))]
PM_stabRob = [radtodeg(2*asin(b_sig/2)) radtodeg(-2*asin(b_sig/2))]


%% Discussion
% The attached plots (generated by the script) have the relevant data (GM
% PM etc) indicated. Of note is the comparison between Classical and
% Singular Value margins. 

% For classical GM = 6.51  and SV GM = 3.66
% For classical PM = 63.47 and SV PM = 30.4288

% it is clearly observable that the SV margins yield more conservative
% values.



